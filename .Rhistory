## this is equivalent
# YPR1 <- ((I-H) %*% (Mat1 %*% Neqn))[3]/R_use[1]
# YPR2 <- ((I-H) %*% (Mat1 %*% Neqn))[6]/R_use[2]
# Yield <- sum(YPR1*R_equil_temp_a1,YPR2*R_equil_temp_a2)
# Return
Outs$FF <- FF
Outs$Neqn <- Neqn
Outs$Catch <- Catch
# Outs$Yield <- Yield
return(Outs)
}
# Spawn0 <- sum(FindEqn(FF = 0, R0_i = R_init)$Neqn[c(3,6)]) ## unfished spawning biomass
## unfished spawning biomass by area
Spawn0_byage <- FindEqn(FF = 0, R0_i = R_init, R_use = R_init, finding_sb0 = TRUE)$Neqn*maturity_vector
Spawn0 <- c(sum(Spawn0_byage[1:3]),sum(Spawn0_byage[4:6]))
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
Spawn0
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:50){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('right', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
plot(FFs,Spawn,xlab="Fishing effort",ylab="Spawners",type="l",lty=1, col  = 'red', ylim = c(0,10))
lines(FFs,OGSpawn,xlab="Fishing effort",ylab="Spawners",type="l",lty=1)
lines(FFs,SSSpawn,xlab="Fishing effort",ylab="Spawners",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
Spawn
SSSpawn
FF
R_init
R_init = c(0.01,0.99)
Spawn0_byage <- FindEqn(FF = 0, R0_i = R_init, R_use = R_init, finding_sb0 = TRUE)$Neqn*maturity_vector
Spawn0 <- c(sum(Spawn0_byage[1:3]),sum(Spawn0_byage[4:6]))
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:50){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:5){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:1){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:2){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
R_init = c(0.5,0.5)
# Spawn0 <- sum(FindEqn(FF = 0, R0_i = R_init)$Neqn[c(3,6)]) ## unfished spawning biomass
## unfished spawning biomass by area
Spawn0_byage <- FindEqn(FF = 0, R0_i = R_init, R_use = R_init, finding_sb0 = TRUE)$Neqn*maturity_vector
Spawn0 <- c(sum(Spawn0_byage[1:3]),sum(Spawn0_byage[4:6]))
# Part 1 (yield vs F)
FFs <- seq(from=0,to=1,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:2){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
par(mfrow=c(2,1),oma=c(1,1,1,1))
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
dev.off()
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
# Part 1 (yield vs F)
FFs <- seq(from=0,to=5,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:2){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
par(mfrow=c(2,1),oma=c(1,1,1,1))
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
dev.off()
# par(mfrow=c(2,1),oma=c(1,1,1,1))
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
FFs <- seq(from=0,to=5,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:5){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
# Spawn[II] <- sum(ModelPrj$Neqn[c(3,6)]) ## expected N spawners at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:5){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
## unfished spawning biomass by area
Spawn0_byage <- FindEqn(FF = 0, R0_i = R_init, R_use = R_init, finding_sb0 = TRUE)$Neqn*maturity_vector
Spawn0 <- c(sum(Spawn0_byage[1:3]),sum(Spawn0_byage[4:6]))
# Part 1 (yield vs F)
FFs <- seq(from=0,to=5,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:1){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
# par(mfrow=c(2,1),oma=c(1,1,1,1))
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
legend('topright', legend = c('No SRR','SRR by Area (proposed method)', 'Global SRR'),
col = c('black','red', 'blue'), lty = 1)
# Spawn0 <- sum(FindEqn(FF = 0, R0_i = R_init)$Neqn[c(3,6)]) ## unfished spawning biomass
## unfished spawning biomass by area
Spawn0_byage <- FindEqn(FF = 0, R0_i = R_init, R_use = R_init, finding_sb0 = TRUE)$Neqn*maturity_vector
Spawn0 <- c(sum(Spawn0_byage[1:3]),sum(Spawn0_byage[4:6]))
# Part 1 (yield vs F)
FFs <- seq(from=0,to=5,by=0.01)
Yields <- SSYields <-  OGYields <- rep(0,length(FFs))
Spawn <- SSSpawn <- OGSpawn <- rep(0,length(FFs))
# Rused <- matrix(NA, length(FFs), Narea)
Rused <- array(NA, dim = c(length(FFs), Narea, 101))
for (II in 1:length(FF
for (II in 1:length(FFs)){
OGPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_init) ## equilbrium numbers given F
OGYields[II] <- OGPrj$Catch ## yield at F
OGSpawn[II] <- sum(OGPrj$Neqn* maturity_vector) ## expected N spawners at F
for(k in 1:2){
if(k == 1){
R_use_prop = R_use_SS = R_init
} else if(k > 1){
R_use_prop <- ModelPrj$R_new #ModelPrj$R_new ## use last iteration
cat(k,R_use_prop,"\n")
R_use_SS <- SSPrj$R_global #ModelPrj$R_new ## use last iteration
}
ModelPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_prop) ## equilbrium numbers given F
Yields[II] <- ModelPrj$Catch ## yield at F
Spawn[II] <- sum(ModelPrj$Neqn * maturity_vector) ## expected N spawners at F
# Rused[II,,k] <- R_use
# Yields2[II] <- ModelPrj$Yield
SSPrj <- FindEqn(FFs[II], R0_i = R_init, R_use = R_use_SS) ## equilbrium numbers given F
SSYields[II] <- SSPrj$Catch ## yield at F
SSSpawn[II] <- sum(ModelPrj$Neqn * maturity_vector)  ## expected N spawners at F
cat("RIN" , FFs[II],k,   R_use_prop,R_use_SS, "\n")
# cat(FFs[II],k, ModelPrj$Neqn,"\t",   SSPrj$Neqn ,"\n")
cat("SPAWN" , FFs[II],k,     Spawn[II],      SSSpawn[II] , "\n")
cat("SBPR" ,FFs[II],k,     Spawn[II]/R_use_prop,
SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, Spawn[II]/R_use_prop,   SSSpawn[II]/R_use_SS, "\n")
# cat(FFs[II],k, SSPrj$R_global, ModelPrj$R_new, "\n")
} ## end iters
} ## end Fs
# par(mfrow=c(2,1),oma=c(1,1,1,1))
plot(FFs,Yields,xlab="Fishing effort",ylab="Yield",type="l",lty=1,
col  = 'red', ylim = c(0,1))
lines(FFs,OGYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1)
lines(FFs,SSYields,xlab="Fishing effort",ylab="Yield",type="l",lty=1, col = 'blue')
