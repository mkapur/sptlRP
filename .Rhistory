for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
# png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
#                        paste(splt,collapse = "_"),"_",
#                        Sys.Date(),'.png')),
#     height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 16:21)
# dev.off()
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
# ggsave( plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE),
#         file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
# ggsave( plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE),
#         file = here('figs',paste0('Yielda_comparisons_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
}
for(s in 1:3){
splt <- list(c(1,1),
c(0.6,0.4),
c(0.8,0.2))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 16:21)
dev.off()
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
ggsave( plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE),
file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
ggsave( plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE),
file = here('figs',paste0('Yielda_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
}
warnings()
# R0_list <- list(c(500,500), c(300,700), c(700,300))
# R0_list <- list(c(50,50), c(30,70), c(70,30))
R0_list <- list(c(450,450), c(250,650), c(650,250))
for(s in 1:3){
splt <- list(c(1,1),
c(0.6,0.4),
c(0.8,0.2))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 16:21)
dev.off()
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
ggsave( plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE),
file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
ggsave( plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE),
file = here('figs',paste0('Yielda_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
}
plot_yield_curves <- function(sys_matrix, rRef_proposed_i = NULL, byarea = FALSE){
barlist <- list()
for(RR in 1:length(R0_list)){
barlist[[RR]] <- melt(data.frame(R0_list[[RR]])) %>%
mutate(Area = 1:narea) %>%
ggplot(., aes(x = Area, y = value, fill = factor(Area))) +
geom_histogram(stat = 'identity',
boundary = 0)+
scale_fill_grey()  +
annotate('text', x = 1:narea, y = 200,
label = paste('Area',1:narea),
color = c("white","grey22","grey66")[1:narea],
size = 2) +
scale_y_continuous(limits = c(0,1000)) +
# scale_y_continuous(limits = c(0,max(R0_list[[RR]]*1.1))) +
theme_void()+
theme(legend.position = 'none')
}
if(byarea == FALSE){
## plot yield curves
plist3a <- plist3a2 <- list();idx = 1
for(RR in 1:length(R0_list)){
tmp <- data.frame(sys_matrix[,,RR])
names(tmp) <- c('Fv','current','proposed')
plist3a[[idx]] <- tmp %>% melt(id = 'Fv') %>%
ggplot(., aes(x = Fv, y = value, color = variable, linetype = variable)) +
geom_line(lwd = 1.1) +
scale_color_manual(values = c('seagreen','goldenrod'), labels = c('current','proposed')) +
scale_linetype_manual(values = c('solid','dashed'), labels = c('current','proposed'), guide=FALSE ) +
labs(x = 'F', y = ifelse(RR == 1, 'Yield',""), color = "") +
# scale_y_continuous(limits = c(0,100), breaks = seq(0,100,10)) +
theme_sleek() +
theme(legend.position = if(RR<3) 'none' else c(0.75,0.5))
idx = idx+1
}
for(RR in 1:length(plist3a)){
plist3a2[[RR]] <- ggdraw() +
draw_plot(plist3a[[RR]]) +
draw_plot(barlist[[ifelse(RR >length(R0_list), RR-length(R0_list), RR)]]+
annotate('text', x = (1+narea)/2,
y = max(R0_list[[RR]]*1.05),
cex = 2,
label = 'Initial Recruitment'),
x = 0.25, y = 0.1,
width = .25, height = .25)
}
print(Rmisc::multiplot(plotlist = plist3a2,  cols = length(R0_list)))
return(Rmisc::multiplot(plotlist = plist3a2,  cols = length(R0_list)))
}
if(byarea == TRUE){
## Ricks plots by area ----
p1list = list()
blist= list()
# A1 = round(c(areaopt[,2],sysopt_curr$FsysMSY),3)
# A2 = round(c(areaopt[,3],sysopt_curr$FsysMSY),3)
# A3 = round(c(areaopt[,4],sysopt_curr$FsysMSY),3)
for(i in 1:length(R0_list)){
propI <- data.frame( sys_matrix[,,i])
names(propI) <- c('Fv',paste('Area',1:narea))
p1list[[i]] <- propI %>%
melt(id = c("Fv")) %>%
ggplot( ., aes(x = Fv, y = value, color = variable)) +
geom_line(lwd = 1.1) +
labs(x = 'F', y = ifelse(i == 1, 'Yield',""), color = "") +
scale_color_grey() +
scale_y_continuous(limits = c(0,65))+
# scale_y_continuous(limits = c(0,max(propI[,2:(narea+1)])*1.1)) +
theme_sleek() +
# theme(legend.position = 'none')
theme(legend.position = if(i < length(R0_list)) 'none' else c(0.8,0.8)) #+ ggtitle("high oscillation problem -- conclude on 99th iteration")
# annotate('text', x = 0.75, y = 60,
#          color ='grey66',
#          label = as.expression(bquote(F[MSY]~"="~.(A1[i])))) +
# annotate('text', x = 0.75, y = 55,
#          color ='grey44',
#          label = as.expression(bquote(F[MSY]~"="~.(A2[i])))) +
# annotate('text', x = 0.75, y = 50,
#          color ='grey22',
#          label = as.expression(bquote(F[MSY]~"="~.(A3[i])))) +
# annotate('text', x = 0.75, y = 45,
#          color ='blue',
#          label = as.expression(bquote(Total~Yield~"="~.(sum(areaopt[i,5:7]))))) +
#
# blist[[i]] <-  ggplot( ) +
#   geom_line(data = propi1, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 1') ) +
#   geom_line(data = propi2, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 2') ) +
#   geom_line(data = propi3, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 3') ) +
#   labs(x = 'F', y = ifelse(i == 1, 'B',""), color = "") +
#   scale_color_grey() +
#   scale_y_continuous(limits = c(0,625)) +
#   theme_sleek() +
#   theme(legend.position = 'none') #+ ggtitle("high oscillation problem -- conclude on 99th iteration")
}
plist2 <- list()
for(RR in 1:length(R0_list)){
plist2[[RR]] <- ggdraw() +
draw_plot(p1list[[RR]] +
annotate('text', x = 0, y = 60,
label = toupper(letters[RR]), cex = 6)) +
draw_plot(barlist[[RR]]+
annotate('text', x = (narea+1)/2,
y = 750,
cex = 3,
label = 'Initial Recruitment'),
x = 0.25, y = 0.1,
width = .25, height = .25)
}
print(Rmisc::multiplot(plotlist = plist2,
cols = 3))
return(Rmisc::multiplot(plotlist = plist2,
cols = 3))
}
# ggsave(  Rmisc::multiplot(plotlist = plist3a2,  cols = 3),
#        file = here('figs','Yield_comparisons_3area_eigen.png'),
#        width = 10, height = 8, unit = 'in', dpi = 520)
}
for(s in 1:3){
splt <- list(c(1,1),
c(0.6,0.4),
c(0.8,0.2))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 16:21)
dev.off()
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
ggsave( plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE),
file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
ggsave( plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE),
file = here('figs',paste0('Yielda_comparisons_2area_buff0.005_5ppenalty_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
}
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 12:16)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 10:15)
## 2-area model with mixture movement ----
rm(list = ls())
narea <- 2
nages <- 21
steep <- rep(0.7,3)
recr_dist <- c(1,1) ## global recruits to areas
# R0_list <- list(c(500,500), c(300,700), c(700,300))
# R0_list <- list(c(50,50), c(30,70), c(70,30))
R0_list <- list(c(450,450), c(250,650), c(650,250))
lapply(list.files(here("R"), full.names = TRUE), source)
maxiter =  101 ## set to 1 to only use eigen
s = 1
splt <- list(c(1,1),
c(0.6,0.4),
c(0.8,0.2))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2b)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2b,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
# png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
#                        paste(splt,collapse = "_"),"_",
#                        Sys.Date(),'.png')),
#     height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 10:15)
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
s = 2
splt <- list(c(1,1),
c(0.6,0.4),
c(0.8,0.2))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2b)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_MIX2b,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
# png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
#                        paste(splt,collapse = "_"),"_",
#                        Sys.Date(),'.png')),
#     height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 10:15)
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),3, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <- array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
# eigv <- eigen(list(X_ija_EQUAL[,,1], X_ija_MIX2[,,1], X_ija_UNI2[,,1])[[m]])$vectors * sqrt(2)
# receq = abs(diag(eigv) * R0_list[[RR]]) #eigv*R0_list[[RR]]
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_NULL2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
recr_dist= recr_dist,
movemat = X_ija_NULL2,
currReq = current_Req)
# cat(Ftest[Fv], sum(prop$radj[min(which(is.na(prop$radj)))-1,]),current_Req,"\n")
# cat(Ftest[Fv], prop$Yield,curr$Yield,"\n")
# cat(Ftest[Fv], prop$radj[min(which(is.na(prop$radj)))-1,],"\n")
# cat(Ftest[Fv], prop$radj[2,],"\n")
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <- Ftest[Fv]
} ## end Fs
} ## end input rec levels
## plot radj
# png(here('figs',paste0('R_eq_iterations_2area_Buff=0.005_5ppenalty_Mixture_',
#                        paste(splt,collapse = "_"),"_",
#                        Sys.Date(),'.png')),
#     height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 10:15)
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
## plot yield comps solo and by area
plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE)
plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE)
splr
splt
