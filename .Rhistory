NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*dat[age,'mortality',slice]
} ## end age < maxage
if(age == max(nage)){
NPR_SURV[area,age,slice] <-NPR_SURV[area,nage-1,slice]*dat[age,'mortality',slice]/(1-dat[age,'mortality',slice])
} ## end plus group
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]*(1-FF[jarea])
# cat(NCome,"\n")
} # end i != j
} # end subareas j
## note, they are fished "before" moving; so NCome includes fishery deaths experienced in area-from
if(age >1) NPR[area,age,slice] <- (1-pLeave)*NPR_SURV[area,age,slice]*(1-FF[area]) + NCome
} ## end ages 2:nage
for(age in 0:nage){
BPR[area,age,slice] <-  NPR[area,age,slice]*dat[age,"weight",area] ## weight in 3 and 4 col
SBPR[area,age,slice] <-  BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age
YPR[area,age,slice] <- dat[age,"fishery_selectivity",area]*FF[area]*BPR[area,age,slice] ## disregard selex
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
s=1
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea))
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
if(age > 1  & age < max(nage)) {
NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*dat[age,'mortality',slice]
} ## end age < maxage
if(age == max(nage)){
NPR_SURV[area,age,slice] <-NPR_SURV[area,nage-1,slice]*dat[age,'mortality',slice]/(1-dat[age,'mortality',slice])
} ## end plus group
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]*(1-FF[jarea])
# cat(NCome,"\n")
} # end i != j
} # end subareas j
## note, they are fished "before" moving; so NCome includes fishery deaths experienced in area-from
if(age >1) NPR[area,age,slice] <- (1-pLeave)*NPR_SURV[area,age,slice]*(1-FF[area]) + NCome
} ## end ages 2:nage
for(age in 0:nage){
BPR[area,age,slice] <-  NPR[area,age,slice]*dat[age,"weight",area] ## weight in 3 and 4 col
SBPR[area,age,slice] <-  BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age
YPR[area,age,slice] <- dat[age,"fishery_selectivity",area]*FF[area]*BPR[area,age,slice] ## disregard selex
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
NPR
plot(NPR[1,,1])
doPR
##  CONTINUOUS F doPR ----
## just run to 100 AGES.
doPR <- function(dat, narea = 2, nage = 100, FF = c(0,0)){
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea)) ## now 100 years of record
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
# if(age > 1  & age < max(nage)) {
if(age > 1){
NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*
dat[age,'mortality',slice]*exp(-FF[area])
} ## end age > recruit
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]
# cat(NCome,"\n")
} # end i != j
} # end subareas j
NPR[area,age,slice] <- ((1-pLeave)*NPR_SURV[area,age,slice] + NCome)
} ## end ages 2:nage
for(age in 1:nage){
NPR[area,age,slice] <- NPR[area,age,slice]  ## divide by y so we are still in per-recruit land (1 recruit per year)
BPR[area,age,slice] <- NPR[area,age,slice]*dat[age,"weight",area]
SBPR[area,age,slice] <- BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age - use baranov catch equation!
## bpr IS Wa x Nax
## make sure ztemp is not in exp space (so log mortality, which is exp(-M), really should be survivorship)
Ztemp <- -log(dat[age,'mortality',slice])+dat[age,"fishery_selectivity",area]*FF[area]
YPR[area,age,slice] <- (dat[age,"fishery_selectivity",area]*
FF[area]*
NPR[area,age,slice]*
dat[age,"weight",area]*
(1-exp(-Ztemp)))/(Ztemp)
# cat( YPR[area,age,slice],"\n")
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
# cat(FF,Ztemp,sum(YPR[,,,ny]), sum(NPR[,,,ny]), "\n")
return(list("NPR"=NPR,
"BPR"=BPR,
"SBPR"=SBPR,
"YPR"=YPR))
} ## end func
scen
s = 3
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,3,0.1),seq(0,3,0.1)) ## continuous F
out <- makeOut(dat, FFs)
# out_use <- data.frame(out[,,'new']) ; View(out_use)
outold <- data.frame(out[,,'old'])  ; View(outold)
# with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(out_use, FF_Area2 > 2), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(outold, FF_Area2 == 1.9), plot(FF_Area1 +FF_Area2, tyield))
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
source(here('R','figs.R'))
source(here('R','figs.R'))
# https://stackoverflow.com/questions/24237399/how-to-select-the-rows-with-maximum-values-in-each-group-with-dplyr
# may=iso1 %>%
#   group_by(FF_Area1) %>%
#   filter(yield == max(yield)) %>%
#   arrange(FF_Area1, FF_Area2) %>% select(-Area)
out_use <- data.frame(out[,,'new'])
new <- out_use %>%
select(FF_Area1,FF_Area2, Yield_Total =tyield) %>%
reshape2::melt(id = c("FF_Area1","FF_Area2")) %>%
# mutate(Area = substr(variable,7,8), yield = value) %>%
mutate(yield = value) %>%
select(-variable,-value) %>%
ggplot(., aes(x = FF_Area1, y = FF_Area2, fill = yield)) +
geom_tile() +
coord_equal() +
ggsidekick::theme_sleek() +
theme(legend.position = 'top') +
# scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(add = c(0, 0)), limits = c(0,1)) +
scale_x_continuous(expand = c(0,0), limits = c(0,1)) +
scale_fill_viridis_c(option = 'magma',na.value = 'white') +
scale_color_viridis_c(option = 'magma',na.value = 'white') +
## add the locations of FMSY from new method
geom_point(data = out2_new, aes(x = FF_Area1, y = FF_Area2),
fill = NA,
size = 2, alpha = 0.3) +
geom_point(data = out2_new, aes(x = out2_new[which.max(out2_new[,'tyield']),'FF_Area1'],
y = out2_new[which.max(out2_new[,'tyield']),'FF_Area2']),
fill = NA, color = 'purple', size = 2, pch =15)+
annotate('text',
x = 0.8,
y = 0.85,
size = 3,
color = 'purple',
label = as.expression(bquote(MSY[Optim]~
"="~.(round(out2_new[which.max(out2_new[,'tyield']),
'tyield']))))) +
annotate('text',
x = 0.8,
y = 0.8,
size = 3,
color ='purple',
label = as.expression(bquote(F[MSY_Optim]~"="~.
(round(out2_new[which.max(out2_new$tyield),'FMSY'],2))))) +
labs(x = 'F in Area 1',   y = 'F in Area 2', fill = 'Total Yield',  title = SCENARIO)
new
out_use
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,10,0.1),seq(0,10,0.1)) ## continuous F
out <- makeOut(dat, FFs)
outold <- data.frame(out[,,'old'])  ; View(outold)
# with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(out_use, FF_Area2 > 2), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(outold, FF_Area2 == 1.9), plot(FF_Area1 +FF_Area2, tyield))
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
## save the max to master table
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,100,0.1),seq(0,100,0.1)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ; View(out_use)
rm(out)
rm(out2)
rm(propmsytemp)
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,100,1),seq(0,100,1)) ## continuous F
out <- makeOut(dat, FFs)
## Code to replicate Kapur et al (202X)
## Spatial reference points for next-gen assessment models
rm(list = ls())
require(dplyr)
require(here)
require(ggplot2);require(ggsidekick);require(patchwork)
require(reshape2)
source(here("R","fnxs.R"))
## settings, unchanged
R0_global <- 4
Rprop_input <- 0.65
steep = c(0.7,0.7)
## Code to replicate Kapur et al (202X)
## Spatial reference points for next-gen assessment models
rm(list = ls())
require(dplyr)
require(here)
require(ggplot2);require(ggsidekick);require(patchwork)
require(reshape2)
source(here("R","fnxs.R"))
## settings, unchanged
R0_global <- 4
Rprop_input <- 0.65
steep = c(0.7,0.7)
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink')
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =17)
colnames(scen) <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL") ## scenarios are defined by differeniating
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6)
scen[,2:ncol(scen)] <- as.numeric(scen[,2:ncol(scen)])
s = 3
scen <- scen[- which(scen[,"SCENARIO_NAME"] == 'A2 Sink'),]
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,25,1),seq(0,100,1)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ; View(out_use)
FFs
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,50,1),seq(0,50,1)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ; View(out_use)
out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield)
out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,10,0.05),seq(0,10,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ;
out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
summary(out_use)
out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
out_use %>% filter(FF_Area2 >5) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
out_use %>% filter(FF_Area2 >1) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
out_use %>% filter(FF_Area2 >0.5) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
out_use %>% filter(FF_Area2 >0.2) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
out_use %>% filter(FF_Area2 >0.1) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ;
out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
# outold <- data.frame(out[,,'old'])
FFs <- expand.grid(seq(0,100,1),0) #seq(0,1,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ;
out_use
out_use[which.max(out_use$tyield),]
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,1000,10),0) #seq(0,1,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ;
out_use[which.max(out_use$tyield),]
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,100000,1000),0) #seq(0,1,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- dataout_use[which.max(out_use$tyield),].frame(out[,,'new']) ;
out_use <- data.frame(out[,,'new']) ;
out_use[which.max(out_use$tyield),]
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,1e10,1e10/10),0) #seq(0,1,0.05)) ## continuous F
out <- makeOut(dat, FFs)
out_use <- data.frame(out[,,'new']) ;
out_use[which.max(out_use$tyield),]
doPR
for(y in 1:ny){
if(y == 1){ ## establish array first time
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea,ny)) ## now 100 years of record
}
NPR_SURV[,1,1,y] <- NPR[,1,1,y] <- c(1,0);  NPR_SURV[,1,2,y] <-  NPR[,1,2,y] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
# if(age > 1  & age < max(nage)) {
if(age > 1){
if(y > 1){
## NAA is those which age in from last year plus contribution of recruit
NPR_SURV[area,age,slice,y] <-  (NPR[area,age-1,slice,y-1]+NPR_SURV[area,age-1,slice,y])*
dat[age,'mortality',slice]*exp(-FF[area])
# cat(  NPR_SURV[area,age,slice,y], "\n")
} else{
NPR_SURV[area,age,slice,y] <- NPR_SURV[area,age-1,slice,y]*
dat[age,'mortality',slice]*exp(-FF[area])
} ## end first year setup
} ## end age > recruit
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice,y]
# cat(NCome,"\n")
} # end i != j
} # end subareas j
NPR[area,age,slice,y] <- ((1-pLeave)*NPR_SURV[area,age,slice,y] + NCome)
} ## end ages 2:nage
for(age in 1:nage){
NPR[area,age,slice,y] <- NPR[area,age,slice,y]/y  ## divide by y so we are still in per-recruit land (1 recruit per year)
BPR[area,age,slice,y] <- NPR[area,age,slice,y]*dat[age,"weight",area]
SBPR[area,age,slice,y] <- BPR[area,age,slice,y]*dat[age,"maturity",area]
## Calc Yield for each area-age - use baranov catch equation!
## bpr IS Wa x Nax
## make sure ztemp is not in exp space (so log mortality, which is exp(-M), really should be survivorship)
Ztemp <- -log(dat[age,'mortality',slice])+dat[age,"fishery_selectivity",area]*FF[area]
YPR[area,age,slice,y] <- (dat[age,"fishery_selectivity",area]*
FF[area]*
NPR[area,age,slice,y]*
dat[age,"weight",area]*
(1-exp(-Ztemp)))/(Ztemp)
# cat( YPR[area,age,slice,y],"\n")
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
} ## end n years
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea)) ## now 100 years of record
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
narea = 2
nage = 100
FF
FF = c(0,0)){
FF = c(0,0)
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea)) ## now 100 years of record
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
# if(age > 1  & age < max(nage)) {
if(age > 1){
NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*
dat[age,'mortality',slice]*exp(-FF[area])
} ## end age > recruit
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]
# cat(NCome,"\n")
} # end i != j
} # end subareas j
NPR[area,age,slice] <- ((1-pLeave)*NPR_SURV[area,age,slice] + NCome)
} ## end ages 2:nage
for(age in 1:nage){
NPR[area,age,slice] <- NPR[area,age,slice]  ## divide by y so we are still in per-recruit land (1 recruit per year)
BPR[area,age,slice] <- NPR[area,age,slice]*dat[age,"weight",area]
SBPR[area,age,slice] <- BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age - use baranov catch equation!
## bpr IS Wa x Nax
## make sure ztemp is not in exp space (so log mortality, which is exp(-M), really should be survivorship)
Ztemp <- -log(dat[age,'mortality',slice])+dat[age,"fishery_selectivity",area]*FF[area]
YPR[area,age,slice] <- (dat[age,"fishery_selectivity",area]*
FF[area]*
NPR[area,age,slice]*
dat[age,"weight",area]*
(1-exp(-Ztemp)))/(Ztemp)
# cat( YPR[area,age,slice],"\n")
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
plot(NPR[1,,1])
plot(NPR[,,1])
NPR[,,1]
plot(NPR[1,,1])
plot(NPR[1,,2])
plot(NPR[2,,1])
plot(NPR[2,,2])
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea))
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
if(age > 1  & age < max(nage)) {
NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*dat[age,'mortality',slice]
} ## end age < maxage
if(age == max(nage)){
NPR_SURV[area,age,slice] <-NPR_SURV[area,nage-1,slice]*dat[age,'mortality',slice]/(1-dat[age,'mortality',slice])
} ## end plus group
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]*(1-FF[jarea])
# cat(NCome,"\n")
} # end i != j
} # end subareas j
## note, they are fished "before" moving; so NCome includes fishery deaths experienced in area-from
if(age >1) NPR[area,age,slice] <- (1-pLeave)*NPR_SURV[area,age,slice]*(1-FF[area]) + NCome
} ## end ages 2:nage
for(age in 0:nage){
BPR[area,age,slice] <-  NPR[area,age,slice]*dat[age,"weight",area] ## weight in 3 and 4 col
SBPR[area,age,slice] <-  BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age
YPR[area,age,slice] <- dat[age,"fishery_selectivity",area]*FF[area]*BPR[area,age,slice] ## disregard selex
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
plot(NPR[1,,1])
plot(NPR[1,,2])
plot(NPR[2,,1])
NPR_SURV <- NPR <- BPR <- SBPR <- YPR <- array(NA, dim = c(narea,nage,narea))
NPR_SURV[,1,1] <- NPR[,1,1] <- c(1,0);  NPR_SURV[,1,2] <-  NPR[,1,2] <- c(0,1) ## single recruit to each area
for(slice in 1:narea){
## Calc Survivors for each area-age within slice
for(age in 2:nage){
for(area in 1:narea){
## First calc survivors within area
if(age > 1  & age < max(nage)) {
NPR_SURV[area,age,slice] <- NPR_SURV[area,age-1,slice]*dat[age,'mortality',slice]
} ## end age < maxage
if(age == max(nage)){
NPR_SURV[area,age,slice] <-NPR_SURV[area,nage-1,slice]*dat[age,'mortality',slice]/(1-dat[age,'mortality',slice])
} ## end plus group
} ## end survivors-in-area
} ## end ages 2:nage
for(area in 1:narea){
for(age in 2:nage){
pLeave = NCome = 0
for(jarea in 1:narea){
if(area != jarea){
pLeave = pLeave + (1-dat[age,"proportion_stay",area])
NCome = NCome +(1-dat[age,"proportion_stay",jarea])*NPR_SURV[jarea,age,slice]*(1-FF[jarea])
# cat(NCome,"\n")
} # end i != j
} # end subareas j
## note, they are fished "before" moving; so NCome includes fishery deaths experienced in area-from
if(age >1) NPR[area,age,slice] <- (1-pLeave)*NPR_SURV[area,age,slice]*(1-FF[area]) + NCome
} ## end ages 2:nage
for(age in 0:nage){
BPR[area,age,slice] <-  NPR[area,age,slice]*dat[age,"weight",area] ## weight in 3 and 4 col
SBPR[area,age,slice] <-  BPR[area,age,slice]*dat[age,"maturity",area]
## Calc Yield for each area-age
YPR[area,age,slice] <- dat[age,"fishery_selectivity",area]*FF[area]*BPR[area,age,slice] ## disregard selex
} ## end ages 0:nage
} ## end areas
} ## end slices (array)
