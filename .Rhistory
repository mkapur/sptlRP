scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(steep[1],"_",steep[2]),"-",SCENARIO))
dir.create(filetemp)
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
rm(out2);rm(out);rm(propmsytemp);rm(dat)
}
## master method comparison
scen[,-c(2:5)] %>%
data.frame() %>%
melt(id = c("SCENARIO_NAME")) %>%
mutate(value = as.numeric(value),
SRC =
ifelse(is.na(stringr::word(variable,3,sep = "_")),
stringr::word(variable,2,sep = "_"),
stringr::word(variable,3,sep = "_")),
variable = stringr::word(variable,1,sep = "_")) %>%
group_by(SCENARIO_NAME, variable) %>%
summarise(normVal = value/sum(value), SRC) %>%
mutate(SCENf = factor(SCENARIO_NAME, levels = SCENNAMES),
SRC = recode(SRC,GLOBAL = 'SS (global)',NEW = 'Proposed')) %>%
ggplot(., aes(x = variable, y = normVal, fill = SRC)) +
geom_bar(position = 'dodge', stat = 'identity') +
ggsidekick::theme_sleek() +
scale_fill_manual(values = c('dodgerblue3','grey66'))+
labs(x ="", y = "normalized value", fill = '')+
facet_wrap(~SCENf)
scen
## matrix of scnearios, including name
## some notes on scenarios:
## slx only are like AAF.
## if name is "move" it uses the A1_SINK setup.
## A2 SINK is simply the reverse of A1 sink
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement','Symmetrical Movement','A1 Sink','A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink','A1 Hi Selex + A1 Sink')
## master method comparison
scen[,-c(2:5)] %>%
data.frame() %>%
melt(id = c("SCENARIO_NAME")) %>%
mutate(value = as.numeric(value),
SRC =
ifelse(is.na(stringr::word(variable,3,sep = "_")),
stringr::word(variable,2,sep = "_"),
stringr::word(variable,3,sep = "_")),
variable = stringr::word(variable,1,sep = "_")) %>%
group_by(SCENARIO_NAME, variable) %>%
summarise(normVal = value/sum(value), SRC) %>%
mutate(SCENf = factor(SCENARIO_NAME, levels = SCENNAMES),
SRC = recode(SRC,GLOBAL = 'SS (global)',NEW = 'Proposed')) %>%
ggplot(., aes(x = variable, y = normVal, fill = SRC)) +
geom_bar(position = 'dodge', stat = 'identity') +
ggsidekick::theme_sleek() +
scale_fill_manual(values = c('dodgerblue3','grey66'))+
labs(x ="", y = "normalized value", fill = '')+
facet_wrap(~SCENf)
SCENNAMES
scen[,-c(2:5)] %>%
data.frame() %>%
melt(id = c("SCENARIO_NAME")) %>%
mutate(value = as.numeric(value),
SRC =
ifelse(is.na(stringr::word(variable,3,sep = "_")),
stringr::word(variable,2,sep = "_"),
stringr::word(variable,3,sep = "_")),
variable = stringr::word(variable,1,sep = "_")) %>%
group_by(SCENARIO_NAME, variable) %>%
summarise(normVal = value/sum(value), SRC) %>%
mutate(SCENf = factor(SCENARIO_NAME, levels = SCENNAMES),
SRC = recode(SRC,GLOBAL = 'SS (global)',
NEW = 'Proposed'))
SCENNAMES
## matrix of scnearios, including name
## some notes on scenarios:
## slx only are like AAF.
## if name is "move" it uses the A1_SINK setup.
## A2 SINK is simply the reverse of A1 sink
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
# 'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink')
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =17)
colnames(scen) <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL") ## scenarios are defined by differeniating
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6)
scen[,2:ncol(scen)] <- as.numeric(scen[,2:ncol(scen)])
## build datasets to spec (will autosave figure)
for(s in 1:nrow(scen)){
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
FFs <- expand.grid(seq(0,0.9999,0.05),seq(0,0.9999,0.05))
out <- makeOut(dat, FFs)
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
## save the max to master table
scen[s,'FMSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'FMSY','new']
scen[s,'FPROP_NEW'] <- out2[which.max(out2[,'tyield','new']),'Fprop','new']
scen[s,'MSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'tyield','new']
scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(steep[1],"_",steep[2]),"-",SCENARIO))
dir.create(filetemp)
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
rm(out2);rm(out);rm(propmsytemp);rm(dat)
}
pStayt
## matrix of scnearios, including name
## some notes on scenarios:
## slx only are like AAF.
## if name is "move" it uses the A1_SINK setup.
## A2 SINK is simply the reverse of A1 sink
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
# 'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink')
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =17)
colnames(scen) <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL") ## scenarios are defined by differeniating
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11) ## lower slx when different
scen[- 'A2 Sink',]
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink')
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =17)
colnames(scen) <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL") ## scenarios are defined by differeniating
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6)
scen[,2:ncol(scen)] <- as.numeric(scen[,2:ncol(scen)])
scen[- 'A2 Sink',]
which(scen$SCENARIO_NAME == 'A2 Sink')
scen[,"SCENARIO_NAME"]
which(scen[,"SCENARIO_NAME"] == 'A2 Sink')
scen[- which(scen[,"SCENARIO_NAME"] == 'A2 Sink'),]
scen <- scen[- which(scen[,"SCENARIO_NAME"] == 'A2 Sink'),]
## build datasets to spec (will autosave figure)
for(s in 1:nrow(scen)){
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
FFs <- expand.grid(seq(0,0.9999,0.05),seq(0,0.9999,0.05))
out <- makeOut(dat, FFs)
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
## save the max to master table
scen[s,'FMSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'FMSY','new']
scen[s,'FPROP_NEW'] <- out2[which.max(out2[,'tyield','new']),'Fprop','new']
scen[s,'MSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'tyield','new']
scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(steep[1],"_",steep[2]),"-",SCENARIO))
dir.create(filetemp)
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
rm(out2);rm(out);rm(propmsytemp);rm(dat)
}
## master method comparison
scen[,-c(2:5)] %>%
data.frame() %>%
melt(id = c("SCENARIO_NAME")) %>%
mutate(value = as.numeric(value),
SRC =
ifelse(is.na(stringr::word(variable,3,sep = "_")),
stringr::word(variable,2,sep = "_"),
stringr::word(variable,3,sep = "_")),
variable = stringr::word(variable,1,sep = "_")) %>%
group_by(SCENARIO_NAME, variable) %>%
summarise(normVal = value/sum(value), SRC) %>%
mutate(SCENf = factor(SCENARIO_NAME, levels = SCENNAMES),
SRC = recode(SRC,GLOBAL = 'SS (global)',
NEW = 'Proposed')) %>%
ggplot(., aes(x = variable, y = normVal, fill = SRC)) +
geom_bar(position = 'dodge', stat = 'identity') +
ggsidekick::theme_sleek() +
scale_fill_manual(values = c('dodgerblue3','grey66'))+
labs(x ="", y = "normalized value", fill = '')+
facet_wrap(~SCENf)
ggsave(last_plot(), width = 10, height = 8, dpi= 520,
file= here("figs", paste0(Sys.Date(),"-MasterCompare.png")))
SCEN
SCENNAMES
85/86
scen
## master method comparison
scen2 <- scen[,-c(2:5)] %>%
data.frame() %>%
melt(id = c("SCENARIO_NAME")) %>%
mutate(value = as.numeric(value),
SRC =
ifelse(is.na(stringr::word(variable,3,sep = "_")),
stringr::word(variable,2,sep = "_"),
stringr::word(variable,3,sep = "_")),
variable = stringr::word(variable,1,sep = "_")) %>%
group_by(SCENARIO_NAME, variable) %>%
summarise(normVal = value/sum(value), SRC) %>%
mutate(SCENf = factor(SCENARIO_NAME, levels = SCENNAMES),
SRC = recode(SRC,GLOBAL = 'SS (global)',
NEW = 'Proposed'))
ggplot(scen2, aes(x = variable, y = normVal, fill = SRC)) +
geom_bar(position = 'dodge', stat = 'identity') +
ggsidekick::theme_sleek() +
scale_fill_manual(values = c('dodgerblue3','grey66'))+
labs(x ="", y = "normalized value", fill = '')+
facet_wrap(~SCENf)
head(scen2)
scen2 %>% group_by(variable, SRC) %>%
summarise(mean(normVal))
scen2 %>% group_by(variable,SCENf, SRC) %>%
summarise(mean(normVal))
scen2 %>%
group_by(variable,SCENf, SRC) %>%
filter(variable %in% c(A1DEPL, A2DEPL, SBMSY))
scen2 %>%
group_by(variable,SCENf, SRC) %>%
filter(variable %in% c('A1DEPL', 'A2DEPL', 'SBMSY')) %>%
summarise(mean(normVal))
list.files(patt='.*[.]png')
- list.files(patt='compare[.]png')
list.files(patt='compare[.]png')
list.files(patt='*compare[.]png')
list.files(patt='.*compare[.]png')
list.files(here('figs'),
patt='.*compare[.]png')
?list.files
list.files(path = here('figs'),
patt='.*compare')
here('figs')
list.files(path = here('figs'),
recursive = TRUE,
patt='.*compare')
list.files(path = here('figs'),
recursive = TRUE,
patt='.*FvsYield_compare')
list.files(path = here('figs'),
recursive = TRUE,
patt='03-09.*FvsYield_compare',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='03-09*FvsYield_compare',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='.*03-09*FvsYield_compare',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='*03-09*FvsYield_compare',
full.names = TRUE)
plots <- lapply(ll <- list.files(path = here('figs'),
recursive = TRUE,
patt='*03-09*FvsYield_compare*',
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
list.files(path = here('figs'),
recursive = TRUE,
patt='*03-09*FvsYield_compare*',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='.*03-09.*FvsYield_compare*',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='*FvsYield_compare',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='03-09&FvsYield_compare',
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt='03-09&FvsYield_compare$',
full.names = TRUE)
glob2rx('03-09*compare')
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx('03-09*compare'),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx('*03-09*compare'),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt="(09&compare).+\\1",
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx("09*.csv")),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx("09*.csv"),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx("09*"),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx("09"),
full.names = TRUE)
list.files(path = here('figs'),
recursive = TRUE,
patt=glob2rx("09*"),
full.names = TRUE
)
list.files(path = here('knitfigs'),
recursive = TRUE,
patt=glob2rx("compare*"),
full.names = TRUE
)
list.files(path = here('knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE)
here('knitfigs')
list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE)
## master plot with compare
library(grid)
library(png)
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
install.packages('png')
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
library(png)
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
library(ggplot2)
library(gridExtra)
ggsave("Plots_Combined.png",width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=2, ncol=1,top=NULL))
list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE)
ggsave("Plots_Combined.png",width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=8, ncol=1,top=NULL))
ggsave("Plots_Combined.png",width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=4, ncol=2,top=NULL))
## master plot with compare
library(grid)
library(png)
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
library(ggplot2)
library(gridExtra)
ggsave("Plots_Combined.png",width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=3, ncol=2,top=NULL))
## master plot with compare
library(grid)
library(png)
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
library(ggplot2)
library(gridExtra)
ggsave("Plots_Combined.png",width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=2, ncol=2,top=NULL))
ggsave(here("figs", paste0(Sys.Date(),"FvsYield_all.png")),width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=2, ncol=2,top=NULL))
ggsave(here("figs", paste0(Sys.Date(),"FvsYield_all.png")),width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=2, ncol=1,top=NULL))
ggsave(here("figs", paste0(Sys.Date(),"FvsYield_all.png")),width=8.5, height=11,
marrangeGrob(grobs = plots, nrow=4, ncol=1,top=NULL))
scen
plots <- lapply(ll <- list.files(path = here('figs','knitfigs'),
recursive = TRUE,
patt="compare",
full.names = TRUE),
function(x){
img <- as.raster(readPNG(x))
rasterGrob(img, interpolate = FALSE)
})
library(ggplot2)
library(gridExtra)
ggsave(here("figs", paste0(Sys.Date(),"FvsYield_all.png")),
width=16, height=12, dpi = 520,
marrangeGrob(grobs = plots, nrow=2, ncol=1,top=NULL))
head(out)
load("C:/Users/mkapur/Dropbox/UW/sptlRP/figs/2021-03-09-h=0.7_0.7-A1 Sink/out.RDATA")
head(out)
tmp$SBPR
