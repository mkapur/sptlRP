rec_level_idx = RLI,
movemat = movemat)$Yield
y2 <- run_one_current(Fv_i = pik*(Fv_test+0.001),
rec_level_idx = RLI,
movemat = movemat)$Yield
appx <- (y2-y1)/(0.002) #0.002 is total X delta; we are using system yield
return(appx)
}
## 2A F sys @ both approaches ----
sysopt <- sysoptAB <- array(NA, dim = c(3,8,3)) ## RR X cols x S
sysopt_curr <- array(NA, dim = c(3,4,3))
for(s in 1:3){
splt <- list(c(1,1),
c(0.7,0.3),
c(0.2,0.8))[[s]]
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
for(RR in 1:3){
# ## PROPOSED
sysopt[RR,1,s] <-   sysoptAB[RR,1,s] <-  sysopt_curr[RR,1,s] <- RR
sysopt[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYS,
RLI = 1,
pik = splt,
movemat = X_ija_MIX2b,
interval = c(0.02,1))[1])
run_at_msy <- optim_loop2(
Fv_i = splt*sysopt[RR, 2, s],
rec_level_idx = RR,
movemat = X_ija_MIX2b
)
sysopt[RR,3,s] <- run_at_msy$Yield
sysopt[RR,4,s] <- run_at_msy$Biomass
sysopt[RR,5:6,s] <- run_at_msy$Yield_i
sysopt[RR,7:8,s] <- run_at_msy$Biomass_i
## proposed AB
sysoptAB[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYSab,
RLI = 1,
pik = splt,
movemat = X_ija_MIX2b,
interval = c(0.02,ifelse(s == 1, 0.55,1)))[1])
run_at_msy <- abloop(Fv_i = splt*sysoptAB[RR,2,s],
movemat  = X_ija_MIX2b,
rec_level_idx = RR)
sysoptAB[RR,3,s] <- run_at_msy$Yield
sysoptAB[RR,4,s] <- run_at_msy$Biomass
sysoptAB[RR,5:6,s] <- run_at_msy$Yield_i
sysoptAB[RR,7:8,s] <- run_at_msy$Biomass_i
## current
sysopt_curr[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYS_curr,
RLI = RR,
pik = splt,
movemat = X_ija_MIX2b,
interval = c(0.02,1))[1])
curr_at_FMSY <- run_one_current(Fv_i =  splt*sysopt_curr[RR,2,s],
movemat  = X_ija_MIX2b,
rec_level_idx = RR)
sysopt_curr[RR,3,s] <- curr_at_FMSY$Yield
sysopt_curr[RR,4,s] <- curr_at_FMSY$B
} # end RR
} ## end split
save(sysopt,file = here::here("sys_optimize_proposed_ss_MIX2b.Rdata"))
save(sysoptAB,file = here::here("sys_optimize_proposed_AB_MIX2b.Rdata"))
save(sysopt_curr,file = here::here("sys_optimize_current_MIX2b.Rdata"))
## 2A F sys @ both approaches ----
sysopt <- sysoptAB <- array(NA, dim = c(3,8,3)) ## RR X cols x S
sysopt_curr <- array(NA, dim = c(3,4,3))
for(s in 1:3){
splt <- list(c(1,1),
c(0.7,0.3),
c(0.2,0.8))[[s]]
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
for(RR in 1:3){
# ## PROPOSED
sysopt[RR,1,s] <-   sysoptAB[RR,1,s] <-  sysopt_curr[RR,1,s] <- RR
sysopt[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYS,
RLI = 1,
pik = splt,
movemat = X_ija_MIX2,
interval = c(0.02,1))[1])
run_at_msy <- optim_loop2(
Fv_i = splt*sysopt[RR, 2, s],
rec_level_idx = RR,
movemat = X_ija_MIX2
)
sysopt[RR,3,s] <- run_at_msy$Yield
sysopt[RR,4,s] <- run_at_msy$Biomass
sysopt[RR,5:6,s] <- run_at_msy$Yield_i
sysopt[RR,7:8,s] <- run_at_msy$Biomass_i
## proposed AB
sysoptAB[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYSab,
RLI = 1,
pik = splt,
movemat = X_ija_MIX2,
interval = c(0.02,ifelse(s == 1, 0.55,1)))[1])
run_at_msy <- abloop(Fv_i = splt*sysoptAB[RR,2,s],
movemat  = X_ija_MIX2,
rec_level_idx = RR)
sysoptAB[RR,3,s] <- run_at_msy$Yield
sysoptAB[RR,4,s] <- run_at_msy$Biomass
sysoptAB[RR,5:6,s] <- run_at_msy$Yield_i
sysoptAB[RR,7:8,s] <- run_at_msy$Biomass_i
## current
sysopt_curr[RR,2,s] <- as.numeric(uniroot(f = dfx.dxSYS_curr,
RLI = RR,
pik = splt,
movemat = X_ija_MIX2,
interval = c(0.02,1))[1])
curr_at_FMSY <- run_one_current(Fv_i =  splt*sysopt_curr[RR,2,s],
movemat  = X_ija_MIX2,
rec_level_idx = RR)
sysopt_curr[RR,3,s] <- curr_at_FMSY$Yield
sysopt_curr[RR,4,s] <- curr_at_FMSY$B
} # end RR
} ## end split
save(sysopt,file = here::here("sys_optimize_proposed_ss_MIX2.Rdata"))
save(sysoptAB,file = here::here("sys_optimize_proposed_AB_MIX2.Rdata"))
save(sysopt_curr,file = here::here("sys_optimize_current_MIX2.Rdata"))
rm(list = ls())
## 2-area model with mixture movement ----
narea <- 2
nages <- 21
steep <- rep(0.7,2)
recr_dist <- c(1,1) ## global recruits to areas
# R0_list <- list(c(500,500), c(300,700), c(700,300))
R0_list <- list(c(500,500)*0.5, c(300,700)*0.5, c(700,300)*0.5)
# R0_list <- list(c(450,450), c(250,650), c(650,250))
lapply(list.files(here::here("R"), full.names = TRUE), source)
maxiter =  101 ## set to 1 to only use eigen
master_plots <- master_plots_area <- list();idx = 1
for(s in 1:3){
splt <- list(c(1,1),
c(0.7,0.3),
c(0.2,0.8))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),4, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),2*narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <-kvar_radj_2areaAB<-  array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)
abprop <- abloop(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
fyr_2area[Fv,4,RR] <- abprop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
far_2area[Fv,4,RR] <- abprop$Yield_i[1]
far_2area[Fv,5,RR] <- abprop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <-    kvar_radj_2areaAB[,Fv,1,RR]  <- Ftest[Fv]
kvar_radj_2areaAB[,Fv,2:3,RR] <- abprop$radj
} ## end Fs
} ## end input rec levels
## plot radj
png(here('figs',paste0('R_eq_ABsyntax_2area_Buff=0.005_5ppenalty_MIX2_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2areaAB, Fidx = 12:16)
dev.off()
png(here('figs',paste0('R_eq_SSsyntax_2area_Buff=0.005_5ppenalty_MIX2_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 12:16)
dev.off()
# ## plot yield comps solo and by area
# cat(idx,"\n")
for(i in 1:length(R0_list)){
master_plots[[idx]] <- plot_yield_curves(sys_matrix = fyr_2area,
byarea = FALSE,
splitid = s)[[i]]
master_plots_area[[idx]] <- plot_yield_curves(sys_matrix  = far_2area,
splitid = s,
byarea = TRUE)[[i]]
idx = idx+1
}
## save individual pik x 3
# ggsave(Rmisc::multiplot(
#   plotlist = plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE,
#                                splitid = s), cols = 3),
#         file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
#
# ggsave( Rmisc::multiplot(plotlist = plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE), cols = 3),
#         file = here('figs',paste0('Yielda_comparisons_ABloop_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
}
ggsave( Rmisc::multiplot(plotlist = master_plots,
layout = matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)),
file = here::here('figs', paste0("Yields_total_MIX2_",Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
ggsave( Rmisc::multiplot(plotlist = master_plots_area,
layout = matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)),
file = here::here('figs',paste0("Yields_area_MIX2_",  Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
## TRIAL 2: Optimizing F ----
plot_yield_curves <- function(sys_matrix,
rRef_proposed_i = NULL,
byarea = FALSE,
splitid = 1){
barlist <- list()
for(RR in 1:length(R0_list)){
barlist[[RR]] <- melt(data.frame(R0_list[[RR]])) %>%
mutate(Area = 1:narea) %>%
ggplot(., aes(x = Area, y = value, fill = factor(Area))) +
geom_histogram(stat = 'identity',
boundary = 0)+
scale_fill_grey()  +
annotate('text', x = 1:narea, y = 200,
label = paste('Area',1:narea),
color = c("white","grey22","grey66")[1:narea],
size = 2) +
scale_y_continuous(limits = c(0,1000)) +
# scale_y_continuous(limits = c(0,max(R0_list[[RR]]*1.1))) +
theme_void()+
theme(legend.position = 'none')
}
if(byarea == FALSE){
## plot yield curves
plist3a <- plist3a2 <- list(); idx = 1
# load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_current_MIX2.Rdata") ## syopt_curr
# load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_proposed_AB_MIX2.Rdata") ## sysoptAB
# load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_proposed_ss_MIX2.Rdata") ## sysopt
load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_current_MIX2b.Rdata") ## syopt_curr
load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_proposed_AB_MIX2b.Rdata") ## sysoptAB
load("C:/Users/mkapur/Dropbox/UW/sptlRP/sys_optimize_proposed_ss_MIX2b.Rdata") ## sysopt
FMSYlabs = round(c(sysopt[,2,splitid],sysoptAB[,2,splitid],sysopt_curr[,2,splitid]),2)
MSYlabs = round(c(sysopt[,3,splitid],sysoptAB[,3,splitid],sysopt_curr[,3,splitid]),2)
for(RR in 1:length(R0_list)){
tmp <- data.frame(sys_matrix[,,RR])
names(tmp) <- c('Fv','current','proposed','proposedAB')
plist3a[[idx]] <- tmp %>% melt(id = 'Fv') %>%
ggplot(., aes(x = Fv, y = value,
color = variable, linetype = variable)) +
geom_line(lwd = 1.1) +
scale_color_manual(values = c('seagreen','goldenrod','dodgerblue2'),
labels = c('current','SS Syntax','a/b Syntax')) +
scale_linetype_manual(values = c('solid','dashed','dotted'),
labels = c('current','SS Syntax','a/b Syntax') ) +
labs(x = 'F', y = ifelse(RR == 1, 'Yield',""),
color = "", linetype = "") +
theme_sleek() +
theme(legend.position = if(RR<3) 'none' else c(0.75,0.5)) +
## FMSY LABS
annotate('text', x = max(tmp$Fv* 0.8), y = 95, size = 2,
color ='seagreen',
label = as.expression(bquote(F[MSY]~"="~.(FMSYlabs[i+6])))) +
annotate('text', x = max(tmp$Fv* 0.8), y = 85,size = 2,
color ='goldenrod',
label = as.expression(bquote(F[MSY]~"="~.(FMSYlabs[i])))) +
annotate('text', x = max(tmp$Fv* 0.8), y = 75,size = 2,
color ='dodgerblue2',
label = as.expression(bquote(F[MSY]~"="~.(FMSYlabs[i+3])))) +
## MSY LABS
annotate('text', x = max(tmp$Fv* 0.8), y = 90,size = 2,
color ='seagreen',
label = as.expression(bquote(MSY~"="~.(MSYlabs[i+6])))) +
annotate('text', x = max(tmp$Fv* 0.8), y = 80,size = 2,
color ='goldenrod',
label = as.expression(bquote(MSY~"="~.(MSYlabs[i])))) +
annotate('text', x = max(tmp$Fv* 0.8), y = 70,size = 2,
color ='dodgerblue2',
label = as.expression(bquote(MSY~"="~.(MSYlabs[i+3]))))
idx = idx+1
}
for(RR in 1:length(plist3a)){
plist3a2[[RR]] <- ggdraw() +
draw_plot(plist3a[[RR]] +
annotate('text', x = 0, y = 90,
label = toupper(letters[(splitid-1)*3+RR]), cex = 6)) +
draw_plot(barlist[[ifelse(RR >length(R0_list), RR-length(R0_list), RR)]]+
annotate('text', x = (1+narea)/2,
y = 750,
cex = 2,
label = 'Initial Recruitment'),
x = 0.7, y = 0.2,
width = .25, height = .25)
}
# print(Rmisc::multiplot(plotlist = plist3a2,  cols = length(R0_list)))
# return(Rmisc::multiplot(plotlist = plist3a2,  cols = length(R0_list)))
return(plist3a2)
}
if(byarea == TRUE){
## Ricks plots by area ----
p1list = list()
blist= list()
# A1 = round(c(areaopt[,2],sysopt_curr$FsysMSY),3)
# A2 = round(c(areaopt[,3],sysopt_curr$FsysMSY),3)
# A3 = round(c(areaopt[,4],sysopt_curr$FsysMSY),3)
for(i in 1:length(R0_list)){
propI <- data.frame( sys_matrix[,,i])
names(propI) <- c('Fv',paste('SS Syntax Area',1:narea),paste('a/b Syntax Area',1:narea))
p1list[[i]] <- propI %>%
melt(id = c("Fv")) %>%
ggplot( ., aes(x = Fv, y = value, color = variable, linetype = variable)) +
geom_line(lwd = 1.1) +
labs(x = 'F', y = ifelse(i == 1, 'Yield',""), color = "", linetype = "") +
scale_color_manual(values = c('grey22','grey66','grey22','grey66')) +
scale_linetype_manual(values = c('solid','solid','dotted','dotted')) +
scale_y_continuous(limits = c(0,75))+
# scale_y_continuous(limits = c(0,max(propI[,2:(narea+1)])*1.1)) +
theme_sleek() +
# theme(legend.position = 'none')
theme(legend.position = if(i < length(R0_list)) 'none' else c(0.75,0.8)) #+ ggtitle("high oscillation problem -- conclude on 99th iteration")
# annotate('text', x = 0.75, y = 60,
#          color ='grey66',
#          label = as.expression(bquote(F[MSY]~"="~.(A1[i])))) +
# annotate('text', x = 0.75, y = 55,
#          color ='grey44',
#          label = as.expression(bquote(F[MSY]~"="~.(A2[i])))) +
# annotate('text', x = 0.75, y = 50,
#          color ='grey22',
#          label = as.expression(bquote(F[MSY]~"="~.(A3[i])))) +
# annotate('text', x = 0.75, y = 45,
#          color ='blue',
#          label = as.expression(bquote(Total~Yield~"="~.(sum(areaopt[i,5:7]))))) +
#
# blist[[i]] <-  ggplot( ) +
#   geom_line(data = propi1, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 1') ) +
#   geom_line(data = propi2, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 2') ) +
#   geom_line(data = propi3, lwd = 1.1,
#             aes(x = Fv, y = B, col = 'Area 3') ) +
#   labs(x = 'F', y = ifelse(i == 1, 'B',""), color = "") +
#   scale_color_grey() +
#   scale_y_continuous(limits = c(0,625)) +
#   theme_sleek() +
#   theme(legend.position = 'none') #+ ggtitle("high oscillation problem -- conclude on 99th iteration")
}
plist2 <- list()
for(RR in 1:length(R0_list)){
plist2[[RR]] <- ggdraw() +
draw_plot(p1list[[RR]] +
annotate('text', x = 0, y = 60,
label = toupper(letters[(splitid-1)*3+RR]), cex = 6)) +
draw_plot(barlist[[RR]]+
annotate('text', x = (narea+1)/2,
y = 750,
cex = 2,
label = 'Initial Recruitment'),
x = 0.65, y = 0.2,
width = .25, height = .25)
}
# print(Rmisc::multiplot(plotlist = plist2,
#                        cols = 3))
# return(Rmisc::multiplot(plotlist = plist2,
#                         cols = 3))
return(plist2)
}
# ggsave(  Rmisc::multiplot(plotlist = plist3a2,  cols = 3),
#        file = here('figs','Yield_comparisons_3area_eigen.png'),
#        width = 10, height = 8, unit = 'in', dpi = 520)
}
rm(list = ls())
## 2-area model with mixture movement ----
narea <- 2
nages <- 21
steep <- rep(0.7,2)
recr_dist <- c(1,1) ## global recruits to areas
lapply(list.files(here::here("R"), full.names = TRUE), source)
# R0_list <- list(c(500,500), c(300,700), c(700,300))
R0_list <- list(c(500,500)*0.5, c(300,700)*0.5, c(700,300)*0.5)
maxiter =  101 ## set to 1 to only use eigen
master_plots <- master_plots_area <- list();idx = 1
for(s in 1:3){
splt <- list(c(1,1),
c(0.7,0.3),
c(0.2,0.8))[[s]]
## custom Ftest to max at 1
Ftest <- seq(0,1/min(splt),0.05) ## 80% of 1.25 is 1.0, so examining full expl
## loop system wide F
fyr_2area <- array(NA, dim = c(length(Ftest),4, length(R0_list))) ## F x 3  x RR
far_2area<- array(NA, dim = c(length(Ftest),2*narea+1, length(R0_list))) ## F x 3 x narea x RR
kvar_radj_2area <-kvar_radj_2areaAB<-  array(NA, dim = c(maxiter,length(Ftest),narea+1,length(R0_list))) ## iters, Fv, 2 areas , RR x movements
for(RR in 1:length(R0_list)){
for(Fv in 1:length(Ftest)){
curr <- run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2b)
# cat(curr$Yield,"\n")
current_Req <- curr$R_ESUMB
prop <- optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2b)
abprop <- abloop(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2b)
fyr_2area[Fv,1,RR] <- Ftest[Fv]
fyr_2area[Fv,2,RR] <- curr$Yield
fyr_2area[Fv,3,RR] <- prop$Yield
fyr_2area[Fv,4,RR] <- abprop$Yield
far_2area[Fv,1,RR] <- Ftest[Fv]
far_2area[Fv,2,RR] <- prop$Yield_i[1]
far_2area[Fv,3,RR] <- prop$Yield_i[2]
far_2area[Fv,4,RR] <- abprop$Yield_i[1]
far_2area[Fv,5,RR] <- abprop$Yield_i[2]
kvar_radj_2area[,Fv,2:3,RR] <- prop$radj
kvar_radj_2area[,Fv,1,RR] <-    kvar_radj_2areaAB[,Fv,1,RR]  <- Ftest[Fv]
kvar_radj_2areaAB[,Fv,2:3,RR] <- abprop$radj
} ## end Fs
} ## end input rec levels
## plot radj
png(here('figs',paste0('R_eq_ABsyntax_2area_Buff=0.005_5ppenalty_MIX2b_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2areaAB, Fidx = 12:16)
dev.off()
png(here('figs',paste0('R_eq_SSsyntax_2area_Buff=0.005_5ppenalty_MIX2b_',
paste(splt,collapse = "_"),"_",
Sys.Date(),'.png')),
height = 8.5, width = 11, unit = 'in', res = 600)
plot_radj(radj_kvar = kvar_radj_2area, Fidx = 12:16)
dev.off()
# ## plot yield comps solo and by area
# cat(idx,"\n")
for(i in 1:length(R0_list)){
master_plots[[idx]] <- plot_yield_curves(sys_matrix = fyr_2area,
byarea = FALSE,
splitid = s)[[i]]
master_plots_area[[idx]] <- plot_yield_curves(sys_matrix  = far_2area,
splitid = s,
byarea = TRUE)[[i]]
idx = idx+1
}
## save individual pik x 3
# ggsave(Rmisc::multiplot(
#   plotlist = plot_yield_curves(sys_matrix = fyr_2area, byarea = FALSE,
#                                splitid = s), cols = 3),
#         file = here('figs',paste0('Yield_comparisons_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
#
# ggsave( Rmisc::multiplot(plotlist = plot_yield_curves(sys_matrix  = far_2area, byarea = TRUE), cols = 3),
#         file = here('figs',paste0('Yielda_comparisons_ABloop_2area_buff0.005_5ppenalty_',
#                                   paste(splt,collapse = "_"),"_",
#                                   Sys.Date(),'.png')),
#         width = 10, height = 8, unit = 'in', dpi = 520)
}
ggsave( Rmisc::multiplot(plotlist = master_plots,
layout = matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)),
file = here::here('figs', paste0("Yields_total_MIX2b_",Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
ggsave( Rmisc::multiplot(plotlist = master_plots_area,
layout = matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)),
file = here::here('figs',paste0("Yields_area_MIX2b_",  Sys.Date(),'.png')),
width = 10, height = 8, unit = 'in', dpi = 520)
## TRIAL 2: Optimizing F ----
44/47
X_ija_MIX2[,,1]
X_ija_MIX2b[,,1]
0.66/0.8
s = 3;RR = 1
splt <- list(c(1,1),
c(0.7,0.3),
c(0.2,0.8))[[s]]
fV = 12
Fv = 12
rm(fV)
run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)
optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)
run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)
224+156
optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)$radj
curr$R_ESUMB
Fv
splt
optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)$last_req
run_one_current(Fv_i = Ftest[Fv]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)$R_ESUMB
optim_loop2(Fv_i = Ftest[Fv]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)$last_req %>% sum()
optim_loop2(Fv_i = Ftest[5]*splt, #rep(Ftest[Fv],narea),#
rec_level_idx = RR,
movemat = X_ija_MIX2)$last_req %>% sum()
run_one_current(Fv_i = Ftest[5]*splt,
rec_level_idx = RR,
movemat = X_ija_MIX2)$R_ESUMB
40/46
38/44
43/48
