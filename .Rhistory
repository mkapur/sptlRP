scen[,'H2'] <- scen[,'H1']
scen[,'NATM'] <-c(rep(exp(-0.2),7),exp(-0.07),exp(-0.2))
## matrix of scnearios, including name
## some notes on scenarios:
## slx only are like AAF.
## if name is "move" it uses the A1_SINK setup.
## A2 SINK is simply the reverse of A1 sink
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink',
'lowerM',
'lowerH',
'lowerH_noMove')
coln <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"H1","H2","NATM",
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL", 'NEW_R0_A1','NEW_R0_A2') ## scenarios are defined by differeniating
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =length(coln));colnames(scen)<- coln
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11,9,9,9) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15,13,13,13) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9,0.9,0.9,1)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6,0.6,0.6,1)
scen[,'H1'] <- c(rep(0.7,8),0.5,0.5)
scen[,'H2'] <- scen[,'H1']
scen[,'NATM'] <-c(rep(exp(-0.2),7),exp(-0.07),exp(-0.2,exp(-0.2)))
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11,9,9,9) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15,13,13,13) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9,0.9,0.9,1)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6,0.6,0.6,1)
scen[,'H1'] <- c(rep(0.7,8),0.5,0.5)
scen[,'H2'] <- scen[,'H1']
scen[,'NATM'] <-c(rep(exp(-0.2),7),exp(-0.07),exp(-0.2),exp(-0.2))
scen[,2:ncol(scen)] <- as.numeric(scen[,2:ncol(scen)])
scen <- scen[- which(scen[,"SCENARIO_NAME"] == 'A2 Sink'),]
datlist <- list()
scen
s = 9
## build datasets to spec (will autosave figure)
for(s in 1:nrow(scen)){
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
natM <- as.numeric(scen[s,'NATM'])
h <<- as.numeric(c(scen[s,'H1'],scen[s,'H2']))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
mort = natM,
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
filetemp <- here('figs',paste0("2021-05-25-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
save(dat, file = paste0(filetemp,'/dat.rdata'))
datlist[[s]] <- dat
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,5,0.1),seq(0,5,0.1)) ## continuous F, will dictate range of yield plot
out <- makeOut(dat, FFs)
# out_use <- data.frame(out[,,'new']) ;
# out_use[which.max(out_use$tyield),]
# out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
# outold <- data.frame(out[,,'old'])  ;outold %>% select(FF_Area1, FF_Area2, tyield) %>% View()#
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(outold), plot(FF_Area1 +FF_Area2, tyield))
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
## save the max to master table
scen[s,'FMSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'FMSY','new']
scen[s,'FPROP_NEW'] <- out2[which.max(out2[,'tyield','new']),'Fprop','new']
scen[s,'MSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'tyield','new']
scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
scen[s,'NEW_R0_A1'] <- out[1,'estRbar','new']*out[1,'estRprop','new']
scen[s,'NEW_R0_A2'] <- out[1,'estRbar','new']*(1-out[1,'estRprop','new'])
# ## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
dir.create(filetemp)
# lapply(list.files(filetemp, pattern = "*.RDATA", full.names = T), load,environment())
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
# rm(out2);rm(out);rm(propmsytemp);rm(dat)
}
s = 9
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
natM <- as.numeric(scen[s,'NATM'])
h <<- as.numeric(c(scen[s,'H1'],scen[s,'H2']))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
mort = natM,
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
filetemp <- here('figs',paste0("2021-05-25-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
save(dat, file = paste0(filetemp,'/dat.rdata'))
datlist[[s]] <- dat
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,5,0.1),seq(0,5,0.1)) ## continuous F, will dictate range of yield plot
out <- makeOut(dat, FFs)
h
# out_use <- data.frame(out[,,'new']) ;
# out_use[which.max(out_use$tyield),]
# out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
# outold <- data.frame(out[,,'old'])  ;outold %>% select(FF_Area1, FF_Area2, tyield) %>% View()#
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(outold), plot(FF_Area1 +FF_Area2, tyield))
propmsytemp <- getMSY()
## save the max to master table
scen[s,'FMSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'FMSY','new']
scen[s,'FPROP_NEW'] <- out2[which.max(out2[,'tyield','new']),'Fprop','new']
scen[s,'MSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'tyield','new']
scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
scen[s,'NEW_R0_A1'] <- out[1,'estRbar','new']*out[1,'estRprop','new']
scen[s,'NEW_R0_A2'] <- out[1,'estRbar','new']*(1-out[1,'estRprop','new'])
# ## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
dir.create(filetemp)
# lapply(list.files(filetemp, pattern = "*.RDATA", full.names = T), load,environment())
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
scen
View(scen)
data.frame(scen) %>%
# select(-SCENARIO_NAME) %>%
# data.frame() %>%
# as.numeric()
mutate(WA = "Linear increasing function; identical between areas") %>%
mutate("LOCALR0" = paste(round(as.numeric(NEW_R0_A1),2),round(as.numeric(NEW_R0_A2),2), sep = ", "),
NATM = round(as.numeric(NATM),2),
'GLOBAL_FMSY_A1' = as.numeric(FMSY_GLOBAL)*as.numeric(FPROP_GLOBAL),
'LOCAL_FMSY_A1' = as.numeric(FMSY_NEW)*as.numeric(FPROP_NEW),
'GLOBAL_FMSY_A2' = as.numeric(FMSY_GLOBAL)*(1-as.numeric(FPROP_GLOBAL)),
'LOCAL_FMSY_A2'= as.numeric(FMSY_NEW)*(1-as.numeric(FPROP_NEW)),
'GLOBAL_MSY' = as.numeric(MSY_GLOBAL),
'LOCAL_MSY' = as.numeric(MSY_NEW),
'GLOBAL_SBMSY' = as.numeric(SBMSY_GLOBAL),
'LOCAL_SBMSY' = as.numeric(SBMSY_NEW)) %>%
select('Scenario' = SCENARIO_NAME,
"Localized R0 (Area 1, Area 2)" = LOCALR0,
"Weight at age" =WA,
'Natural Mortality M' = NATM,
'Movement' = PSTAY_A1,
'Selectivity' = SLX_A50_A1, "Steepness h" = H1,
GLOBAL_FMSY_A1,LOCAL_FMSY_A1,GLOBAL_FMSY_A2,LOCAL_FMSY_A2,GLOBAL_MSY,LOCAL_MSY,GLOBAL_SBMSY,LOCAL_SBMSY ) #%>%
data.frame(scen) %>%
# select(-SCENARIO_NAME) %>%
# data.frame() %>%
# as.numeric()
mutate(WA = "Linear increasing function; identical between areas") %>%
mutate("LOCALR0" = paste(round(as.numeric(NEW_R0_A1),2),round(as.numeric(NEW_R0_A2),2), sep = ", "),
NATM = round(as.numeric(NATM),2),
'GLOBAL_FMSY_A1' = as.numeric(FMSY_GLOBAL)*as.numeric(FPROP_GLOBAL),
'LOCAL_FMSY_A1' = as.numeric(FMSY_NEW)*as.numeric(FPROP_NEW),
'GLOBAL_FMSY_A2' = as.numeric(FMSY_GLOBAL)*(1-as.numeric(FPROP_GLOBAL)),
'LOCAL_FMSY_A2'= as.numeric(FMSY_NEW)*(1-as.numeric(FPROP_NEW)),
'GLOBAL_MSY' = as.numeric(MSY_GLOBAL),
'LOCAL_MSY' = as.numeric(MSY_NEW),
'GLOBAL_SBMSY' = as.numeric(SBMSY_GLOBAL),
'LOCAL_SBMSY' = as.numeric(SBMSY_NEW)) %>%
select('Scenario' = SCENARIO_NAME,
"Localized R0 (Area 1, Area 2)" = LOCALR0,
"Weight at age" =WA,
'Natural Mortality M' = NATM,
'Movement' = PSTAY_A1,
'Selectivity' = SLX_A50_A1, "Steepness h" = H1,
GLOBAL_FMSY_A1,LOCAL_FMSY_A1,GLOBAL_FMSY_A2,LOCAL_FMSY_A2,GLOBAL_MSY,LOCAL_MSY,GLOBAL_SBMSY,LOCAL_SBMSY ) %>%
round(.,2) %>% View()
data.frame(scen) %>%
# select(-SCENARIO_NAME) %>%
# data.frame() %>%
# as.numeric()
mutate(WA = "Linear increasing function; identical between areas") %>%
mutate("LOCALR0" = paste(round(as.numeric(NEW_R0_A1),2),round(as.numeric(NEW_R0_A2),2), sep = ", "),
NATM = round(as.numeric(NATM),2),
'GLOBAL_FMSY_A1' = as.numeric(FMSY_GLOBAL)*as.numeric(FPROP_GLOBAL),
'LOCAL_FMSY_A1' = as.numeric(FMSY_NEW)*as.numeric(FPROP_NEW),
'GLOBAL_FMSY_A2' = as.numeric(FMSY_GLOBAL)*(1-as.numeric(FPROP_GLOBAL)),
'LOCAL_FMSY_A2'= as.numeric(FMSY_NEW)*(1-as.numeric(FPROP_NEW)),
'GLOBAL_MSY' = as.numeric(MSY_GLOBAL),
'LOCAL_MSY' = as.numeric(MSY_NEW),
'GLOBAL_SBMSY' = as.numeric(SBMSY_GLOBAL),
'LOCAL_SBMSY' = as.numeric(SBMSY_NEW)) %>%
select('Scenario' = SCENARIO_NAME,
"Localized R0 (Area 1, Area 2)" = LOCALR0,
"Weight at age" =WA,
'Natural Mortality M' = NATM,
'Movement' = PSTAY_A1,
'Selectivity' = SLX_A50_A1, "Steepness h" = H1,
GLOBAL_FMSY_A1,LOCAL_FMSY_A1,GLOBAL_FMSY_A2,LOCAL_FMSY_A2,GLOBAL_MSY,LOCAL_MSY,GLOBAL_SBMSY,LOCAL_SBMSY ) %>% View()
dat
h
head(out)
h = c(0.99,0.99)
out <- makeOut(dat, FFs)
head(out)
h = c(0.7,0.7)
out <- makeOut(dat, FFs)
head(out)
tail(out)
scen[,'H1'] <- c(rep(0.7,8),0.5,0.25)
scen[,'H2'] <- scen[,'H1']
scen
s-9
s=9
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
natM <- as.numeric(scen[s,'NATM'])
h <<- as.numeric(c(scen[s,'H1'],scen[s,'H2']))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
h
scen
scen
scen[,'H1'] <- c(rep(0.7,8),0.5,0.25)
## matrix of scnearios, including name
## some notes on scenarios:
## slx only are like AAF.
## if name is "move" it uses the A1_SINK setup.
## A2 SINK is simply the reverse of A1 sink
## move light has less lopsitded movement w A1 still as SINK
SCENNAMES <- c('No Movement',
'Symmetrical Movement',
'A1 Sink',
'A2 Sink',
'A1 Low Selex + Symmetrical Movement',
'A1 Low Selex + A1 Sink',
'A1 Hi Selex + A1 Sink',
'lowerM',
'lowerH',
'lowerH_noMove')
coln <- c("SCENARIO_NAME",'SLX_A50_A1','SLX_A95_A1','PSTAY_A1','PSTAY_A2',
"H1","H2","NATM",
"FMSY_NEW","FMSY_GLOBAL","FPROP_NEW","FPROP_GLOBAL",
"MSY_NEW","MSY_GLOBAL", "SBMSY_NEW","SBMSY_GLOBAL",
"A1DEPL_NEW", "A1DEPL_GLOBAL","A2DEPL_NEW", "A2DEPL_GLOBAL", 'NEW_R0_A1','NEW_R0_A2') ## scenarios are defined by differeniating
scen <- matrix(NA, nrow = length(SCENNAMES), ncol =length(coln));colnames(scen)<- coln
scen[,'SCENARIO_NAME'] <-SCENNAMES
scen[,'SLX_A50_A1'] <- c(9,9,9,9,7,7,11,9,9,9) ## lower slx when different
scen[,'SLX_A95_A1'] <- c(13,13,13,13,11,11,15,13,13,13) ## lower slx when different
scen[,'PSTAY_A1'] <- c(1,0.5,0.9,0.6,0.5,0.9,0.9,0.9,0.9,1)
scen[,'PSTAY_A2'] <- c(1,0.5,0.6,0.9,0.5,0.6,0.6,0.6,0.6,1)
scen[,'H1'] <- c(rep(0.7,8),0.5,0.25)
scen[,'H2'] <- scen[,'H1']
scen[,'NATM'] <-c(rep(exp(-0.2),7),exp(-0.07),exp(-0.2),exp(-0.2))
scen[,2:ncol(scen)] <- as.numeric(scen[,2:ncol(scen)])
scen <- scen[- which(scen[,"SCENARIO_NAME"] == 'A2 Sink'),]
scen
SCENARIO <- scen[s,'SCENARIO_NAME']
slx_a50t <- as.numeric(c(scen[s,'SLX_A50_A1'],9))
slx_a95t <- as.numeric(c(scen[s,'SLX_A95_A1'],13))
natM <- as.numeric(scen[s,'NATM'])
h <<- as.numeric(c(scen[s,'H1'],scen[s,'H2']))
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
h
pStayt <- as.numeric(c(scen[s,'PSTAY_A1'],scen[s,'PSTAY_A2']))
dat <- makeDat(wa = c(5,5),
mort = natM,
fec_a50 = c(6,6),
fec_a95 = c(12,12),
slx_a50=slx_a50t,
slx_a95=slx_a95t,
pStay=pStayt)
filetemp <- here('figs',paste0("2021-05-25-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
save(dat, file = paste0(filetemp,'/dat.rdata'))
datlist[[s]] <- dat
# FFs <- expand.grid(seq(0,1,0.05),seq(0,1,0.05)) ## instF
FFs <- expand.grid(seq(0,5,0.1),seq(0,5,0.1)) ## continuous F, will dictate range of yield plot
out <- makeOut(dat, FFs)
head(out)
# out_use <- data.frame(out[,,'new']) ;
# out_use[which.max(out_use$tyield),]
# out_use %>% filter(FF_Area2 < 20) %>% select(FF_Area1, FF_Area2, tyield) %>% View()# View(out_use)
# outold <- data.frame(out[,,'old'])  ;outold %>% select(FF_Area1, FF_Area2, tyield) %>% View()#
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# # with(subset(out_use), plot(FF_Area1 +FF_Area2, tyield))
# with(subset(outold), plot(FF_Area1 +FF_Area2, tyield))
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
## save the max to master table
scen[s,'FMSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'FMSY','new']
scen[s,'FPROP_NEW'] <- out2[which.max(out2[,'tyield','new']),'Fprop','new']
scen[s,'MSY_NEW'] <- out2[which.max(out2[,'tyield','new']),'tyield','new']
scen[s,'SBMSY_NEW'] <- sum(out2[which.max(out2[,'tyield','new']),"SB_A1",'new'],
out2[which.max(out2[,'tyield','new']),"SB_A2",'new'])
scen[s,'A1DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A1",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A1",'new']
scen[s,'A2DEPL_NEW'] <- out2[which.max(out2[,'tyield','new']),"SB_A2",'new']/
out2[which.max(out2[,'tyield','new']),"SB0_A2",'new']
scen[s,'FMSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'FMSY','old']
scen[s,'FPROP_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'Fprop','old']
scen[s,'MSY_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),'tyield','old']
scen[s,'SBMSY_GLOBAL'] <- sum(out2[which.max(out2[,'tyield','old']),"SB_A1",'old'],
out2[which.max(out2[,'tyield','old']),"SB_A2",'old'])
scen[s,'A1DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A1",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A1",'old']
scen[s,'A2DEPL_GLOBAL'] <- out2[which.max(out2[,'tyield','old']),"SB_A2",'old']/
out2[which.max(out2[,'tyield','old']),"SB0_A2",'old']
scen[s,'NEW_R0_A1'] <- out[1,'estRbar','new']*out[1,'estRprop','new']
scen[s,'NEW_R0_A2'] <- out[1,'estRbar','new']*(1-out[1,'estRprop','new'])
# ## save stuff; looks to global SCENARIO for filename
filetemp <- here('figs',paste0(Sys.Date(),"-h=",paste0(h[1],"_",h[2]),"-",SCENARIO))
dir.create(filetemp)
# lapply(list.files(filetemp, pattern = "*.RDATA", full.names = T), load,environment())
source(here('R','figs.R'))
save(out, file = paste0(filetemp,'/out.RDATA'))
save(out2, file =  paste0(filetemp, '/out2.RDATA'))
save(propmsytemp, file =  paste0(filetemp, '/propmsy.RDATA'))
head(out)
steep
h
with(out[,,'old'], plot(sum(SB_A1,SB_A2)~ sum(obsR_a1,obsR_a2)
with(out[,,'old'], plot(sum(SB_A1,SB_A2)~ sum(obsR_a1,obsR_a2))
with(out[,,'old'], plot(sum(SB_A1,SB_A2)~ sum(obsR_a1,obsR_a2)))
out[,,'old']
with(out[,,'old'], plot(sum(SB_A1,SB_A2)~ sum(obsR_a1,obsR_a2)))
with(data.frame(out[,,'old']), plot(sum(SB_A1,SB_A2)~ sum(obsR_a1,obsR_a2)))
with(data.frame(out[,,'old']), plot(sum(SB_A1,SB_A2)~ sum(obsR_A1,obsR_A2)))
with(data.frame(out[,,'old']), plot(rowSums(SB_A1,SB_A2)~ rowSums(obsR_A1,obsR_A2)))
data.frame(out[,,'old']) %>%
mutate(x = sum(SB_A1,SB_A2), y = sum(obsR_A1,obsR_A2)) %>% plot()
dim(data.frame(out[,,'old']))
data.frame(out[,,'old']) %>%
mutate(x = sum(SB_A1,SB_A2), y = sum(obsR_A1,obsR_A2)) %>% plot(y~x)
data.frame(out[,,'old']) %>%
mutate(x = sum(SB_A1,SB_A2), y = sum(obsR_A1,obsR_A2)) %>% plot(y,x)
data.frame(out[,,'old']) %>%
mutate(x = sum(SB_A1,SB_A2), y = sum(obsR_A1,obsR_A2)) %>%
ggplot(., aes(x,y))
data.frame(out[,,'old']) %>%
mutate(x = sum(SB_A1,SB_A2), y = sum(obsR_A1,obsR_A2))
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(x,y))
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2)
data.frame(out[,,'old']) %>%
mutate(x = rowSums(SB_A1+SB_A2), y = obsR_A1+obsR_A2) %>%
ggplot(., aes(x,y))
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(x,y))
data.frame(out[,,'old']) %>%
# mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(SB_A1,obsR_A1))
data.frame(out[,,'old'])
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(SB_A1,obsR_A1)) + geom_point()
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(x,y)) + geom_point()
h
h = c(0.99,0.99)
out <- makeOut(dat, FFs)
propmsytemp <- getMSY()
out2 <- makeOut2(propmsy=propmsytemp)
data.frame(out[,,'old']) %>%
mutate(x = SB_A1+SB_A2, y = obsR_A1+obsR_A2) %>%
ggplot(., aes(x,y)) + geom_point()
scen
data.frame(scen) %>%
# select(-SCENARIO_NAME) %>%
# data.frame() %>%
# as.numeric()
mutate(WA = "Linear increasing function; identical between areas") %>%
mutate("LOCALR0" = paste(round(as.numeric(NEW_R0_A1),2),round(as.numeric(NEW_R0_A2),2), sep = ", "),
NATM = round(as.numeric(NATM),2),
'GLOBAL_FMSY_A1' = as.numeric(FMSY_GLOBAL)*as.numeric(FPROP_GLOBAL),
'LOCAL_FMSY_A1' = as.numeric(FMSY_NEW)*as.numeric(FPROP_NEW),
'GLOBAL_FMSY_A2' = as.numeric(FMSY_GLOBAL)*(1-as.numeric(FPROP_GLOBAL)),
'LOCAL_FMSY_A2'= as.numeric(FMSY_NEW)*(1-as.numeric(FPROP_NEW)),
'GLOBAL_MSY' = as.numeric(MSY_GLOBAL),
'LOCAL_MSY' = as.numeric(MSY_NEW),
'GLOBAL_SBMSY' = as.numeric(SBMSY_GLOBAL),
'LOCAL_SBMSY' = as.numeric(SBMSY_NEW)) %>%
select('Scenario' = SCENARIO_NAME,
"Localized R0 (Area 1, Area 2)" = LOCALR0,
"Weight at age" =WA,
'Natural Mortality M' = NATM,
'Movement' = PSTAY_A1,
'Selectivity' = SLX_A50_A1, "Steepness h" = H1,
GLOBAL_FMSY_A1,LOCAL_FMSY_A1,GLOBAL_FMSY_A2,LOCAL_FMSY_A2,GLOBAL_MSY,LOCAL_MSY,GLOBAL_SBMSY,LOCAL_SBMSY ) %>% View()
scen
#   geom_tile() +
#   coord_equal() +
#   ggsidekick::theme_sleek() + theme(legend.position = 'top') +
#   scale_x_continuous(expand = c(0,0)) +
#   scale_y_continuous(expand = c(0,0)) +
#   scale_fill_viridis_c(na.value = 'white') +
#   labs(x = 'F in Area 1',
#        y = 'F in Area 2',
#        fill = 'Total SB')
#
FYIELD <-
out_use %>%
mutate(Yield_Total = Yield_A1+Yield_A2) %>%
select(FF_Area1,FF_Area2, Yield_Total) %>%
reshape2::melt(id = c("FF_Area1","FF_Area2")) %>%
mutate(Area = substr(variable,7,8), yield = value) %>%
select(-variable,-value) %>%
ggplot(., aes(x = FF_Area1, y = FF_Area2, fill = yield)) +
geom_tile() +
coord_equal() +
ggsidekick::theme_sleek() + theme(legend.position = 'top') +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
scale_fill_viridis_c(option = 'magma',na.value = 'white') +
scale_color_viridis_c(option = 'magma',na.value = 'white') +
## add the locations of FMSY
geom_point(data = out_use2, aes(x = FF_Area1, y = FF_Area2), color = 'grey66', size = 2)+
geom_point(data = out_use2, aes(x = out_use2[which.max(tyield),'FF_Area1'],
y = out_use2[which.max(tyield),'FF_Area2']),
color = 'purple', size = 2, pch =15)+
annotate('text',
x = out_use2[which.max(out_use2$tyield),'FF_Area1']*1.15,
y = out_use2[which.max(out_use2$tyield),'FF_Area2']*1.15,
size = 3,
color ='purple',
label = as.expression(bquote(MSY[Total]~"="~.(round(out_use2[which.max(out_use2$tyield),'tyield']))))) +
annotate('text',
x = out_use2[which.max(out_use2$tyield),'FF_Area1']*1.17,
y = out_use2[which.max(out_use2$tyield),'FF_Area2']*1.07,
size = 3,
color ='purple',
label = as.expression(bquote(F[MSY_Total]~"="~.(round(out_use2[which.max(out_use2$tyield),'FMSY'],2))))) +
labs(x = 'F in Area 1',   y = 'F in Area 2', fill = 'Total Yield')
out_use %>%
mutate(Yield_Total = Yield_A1+Yield_A2) %>%
select(FF_Area1,FF_Area2, Yield_Total) %>%
reshape2::melt(id = c("FF_Area1","FF_Area2")) %>%
mutate(Area = substr(variable,7,8), yield = value) %>%
select(-variable,-value) %>%
ggplot(., aes(x = FF_Area1, y = FF_Area2, fill = yield)) +
geom_tile() +
coord_equal() +
ggsidekick::theme_sleek() + theme(legend.position = 'top') +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
scale_fill_viridis_c(option = 'magma',na.value = 'white') +
scale_color_viridis_c(option = 'magma',na.value = 'white') +
## add the locations of FMSY
geom_point(data = out_use2, aes(x = FF_Area1, y = FF_Area2), color = 'grey66', size = 2)+
geom_point(data = out_use2, aes(x = out_use2[which.max(tyield),'FF_Area1'],
y = out_use2[which.max(tyield),'FF_Area2']),
color = 'purple', size = 2, pch =15)
out_use %>%
mutate(Yield_Total = Yield_A1+Yield_A2) %>%
select(FF_Area1,FF_Area2, Yield_Total) %>%
reshape2::melt(id = c("FF_Area1","FF_Area2")) %>%
mutate(Area = substr(variable,7,8), yield = value) %>%
select(-variable,-value) %>%
ggplot(., aes(x = FF_Area1, y = FF_Area2, fill = yield)) +
geom_tile() +
coord_equal() +
ggsidekick::theme_sleek() + theme(legend.position = 'top') +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
scale_fill_viridis_c(option = 'magma',na.value = 'white') +
scale_color_viridis_c(option = 'magma',na.value = 'white')
head(out)
load("C:/Users/mkapur/Dropbox/UW/sptlRP/figs/2021-05-25-h=0.7_0.7-A1 Sink/out.RDATA")
load("C:/Users/mkapur/Dropbox/UW/sptlRP/figs/2021-05-25-h=0.7_0.7-A1 Sink/out2.RDATA")
head(out)
R0_global
Rprop_input
load("C:/Users/mkapur/Dropbox/UW/sptlRP/figs/2021-04-02-h=0.7_0.7-No Movement/out.RDATA")
head(out)
steep
h
247.8735/0.818731
